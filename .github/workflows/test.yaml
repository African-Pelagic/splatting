name: Python test

on: [push, pull_request]

jobs:
  Benchmark:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install ninja

    - name: Benchmark JIT compiled splatting.SummationSplattingFunction 
      run: |
        python test/benchmark.py splatting_function

    - name: Build cpp extension
      run: |
        python -m pip install -e .

    - name: Benchmark splatting_cpp.splatting_forward and splatting_cpp.splatting_backward
      run: |
        python test/benchmark.py splatting_cpp
    - name: Benchmark splatting.SummationSplattingFunction
      run: |
        python test/benchmark.py splatting_function
    - name: Benchmark splatting.splatting_function summation
      run: |
        python test/benchmark.py splatting_function_summation
    - name: Benchmark splatting.Splatting module summation
      run: |
        python test/benchmark.py splatting_module_summation
    - name: Benchmark splatting.Splatting module softmax
      run: |
        python test/benchmark.py splatting_module_softmax

  Lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade pre-commit
        pre-commit install

    - name: Lint
      run: pre-commit run --all-files --show-diff-on-failure

  Test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install pytest
        python -m pip install pytest-cov
        python -m pip install ninja

    - name: Test with pytest
      run: |
        python -m pytest test --cov=./ --cov-config=.coveragerc --cov-report=xml:cov_jit.xml

    - name: Build cpp extension
      run: |
        python -m pip install -e .

    - name: Test with pytest
      run: |
        python -m pytest test --cov=./ --cov-config=.coveragerc --cov-report=xml:cov_compiled.xml

    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: ./cov_jit.xml,./cov_compiled.xml # optional
        fail_ci_if_error: true # optional (default = false)
